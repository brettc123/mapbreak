@tailwind base;
@tailwind components;
@tailwind utilities;
@import 'maplibre-gl/dist/maplibre-gl.css';

@layer utilities {
  /* safe-area inset helpers (unchanged) */
  .pt-safe     { padding-top: env(safe-area-inset-top); }
  .pl-safe     { padding-left: env(safe-area-inset-left); }
  .pr-safe     { padding-right: env(safe-area-inset-right); }
  .pb-safe     { padding-bottom: env(safe-area-inset-bottom); }
  .top-safe    { top: env(safe-area-inset-top); }
  .right-safe  { right: env(safe-area-inset-right); }
}

@layer base {
  /* FORCE WHITE BACKGROUND IN LIGHT MODE, DARK BACKGROUND IN DARK MODE */
  html, body {
    overflow-x: hidden;
    max-width: 100vw;
    background-color: white !important;
  }

  #root {
    overflow-x: hidden;
    max-width: 100vw;
    background-color: white !important;
  }

  /* Dark mode backgrounds */
  html.dark, body.dark {
    background-color: #111827 !important; /* gray-900 */
  }

  .dark #root {
    background-color: #111827 !important; /* gray-900 */
  }

  /* For systems with dark mode preference */
  @media (prefers-color-scheme: dark) {
    html, body {
      background-color: #111827 !important; /* gray-900 */
    }
    
    #root {
      background-color: #111827 !important; /* gray-900 */
    }
  }

  /* Override dark mode preference when light mode is explicitly set */
  html:not(.dark), body:not(.dark) {
    background-color: white !important;
  }

  :not(.dark) #root {
    background-color: white !important;
  }

  /* only apply these paddings on browsers that actually support env(safe-area-inset-*) */
  @supports (padding: env(safe-area-inset-top)) {
    html, body, #root {
      box-sizing: border-box;
      padding-top: 0 !important;
      padding-left:   env(safe-area-inset-left);
      padding-right:  env(safe-area-inset-right);
      padding-bottom: env(safe-area-inset-bottom);
    }
  }

  /* your existing base rules */
  html {
    font-family: "Outfit", system-ui, sans-serif;
  }
  h1, h2, h3, h4, h5, h6 {
    font-family: "Cal Sans", sans-serif;
  }

  /* ADDITIONAL OVERFLOW PREVENTION */
  * {
    max-width: 100%;
    box-sizing: border-box;
  }

  /* Fix for text that might overflow */
  p, div, span, h1, h2, h3, h4, h5, h6 {
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  /* Ensure flex containers don't overflow */
  .flex {
    min-width: 0;
  }
}

/* SPLASH SCREEN STYLES */
.splash-screen {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  max-width: none !important;
  max-height: none !important;
  overflow: hidden !important;
  z-index: 9999 !important;
}

.splash-screen-override {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  max-width: none !important;
  max-height: none !important;
  overflow: hidden !important;
  z-index: 9999 !important;
}

/* Make sure splash screen content is always visible */
.splash-screen-override * {
  max-width: none !important;
}

/* Custom animations for splash screen */
@keyframes gentlePulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
}

@keyframes pulseRing {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  100% {
    transform: scale(2.5);
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply animations */
.animate-gentle-pulse {
  animation: gentlePulse 2s ease-in-out infinite;
}

.animate-pulse-ring {
  animation: pulseRing 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-fade-in-up {
  animation: fadeInUp 1s ease-out forwards;
}

/* MAP CONTAINER STYLES */
.maplibre-container {
  width: 100%;
  height: 100%;
  min-height: 300px;
  max-width: 100% !important;
  overflow: hidden;
}

/* MAP PERFORMANCE & OVERFLOW FIXES */
.maplibregl-map {
  will-change: transform;
  transform: translateZ(0);
  max-width: 100% !important;
  overflow: hidden;
}

/* MAP CANVAS OPTIMIZATION */
.maplibregl-canvas {
  will-change: transform;
  max-width: 100% !important;
}

/* TOUCH SCROLLING OPTIMIZATION */
* {
  -webkit-overflow-scrolling: touch;
}

/* Reduce paint during scroll */
.animated-line {
  will-change: contents;
}

/* PROSE CONTENT OVERFLOW FIX */
.prose {
  max-width: 100% !important;
  overflow-x: hidden;
}

.prose img {
  max-width: 100% !important;
  height: auto;
}

/* ENSURE IMAGES DON'T OVERFLOW */
img {
  max-width: 100% !important;
  height: auto;
  box-sizing: border-box;
}

/* FAVORITES SCREEN FIX */
.favorites-container {
  overflow: visible !important;
  max-width: 100vw !important;
}

/* Loading animation */
@keyframes loading {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Text size utilities */
.text-default { font-size: 1rem; }
.text-large   { font-size: 1.125rem; }

/* TEMPORARY MOBILE TAILWIND FIX */
@media screen {
  @import 'tailwindcss/base';
  @import 'tailwindcss/components';  
  @import 'tailwindcss/utilities';
}